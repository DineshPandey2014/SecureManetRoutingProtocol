/*
 * Intermediate node two.
 *
 */

/*
 * Port of node two.
 */
var PORT_OF_NODE_TWO = 33333;

/**
 * Ip of node two.
 * @type {string}
 */
var HOST_Two= '127.0.0.1';
var dgram = require('dgram');

/*
 * Open the socket at node two. Receives the encrypted data from node one.
 */
var server_node_two = dgram.createSocket('udp4');
server_node_two.bind(PORT_OF_NODE_TWO, HOST_Two)

/*
 * Listening at port 3333 and host is node two ip: 127.0.0.01
 */
server_node_two.on('listening', function () {
    var address = server_node_two.address();
    console.log('UDP Server listening on ' + address.address + ":" + address.port);
});

var PORT_NODE_THREE = 44444;
var HOST_NODE_THREE = '127.0.0.1';
var client = dgram.createSocket('udp4');
server_node_two.on('message', function (message, remote) {
    console.log("----MessageSendingtonodethreee--"+remote.address + ':' + remote.port +' - ' + message);
    //message = "Wrong Data";
    var nodeOne = new Buffer(message);
    client.send(nodeOne, 0, nodeOne.length, PORT_NODE_THREE, HOST_NODE_THREE, function(err, bytes) {
        if (err) throw err;
        console.log('UDP message sent to ' + HOST_NODE_THREE +':'+ PORT_NODE_THREE);
    });

});


var PORTFOUR = 60000;
var HOSTFOUR = '127.0.0.1';
var dgram = require('dgram');
var serverAck = dgram.createSocket('udp4');

serverAck.on('listening', function () {
    var address = serverAck.address();
    console.log('UDP server acknowledgemen listening on ' + address.address + ":" + address.port);
});

var PORTNODEONE = 4000;
var HOSTONE = '127.0.0.1';
var clientAck = dgram.createSocket('udp4');
serverAck.on('message', function (message, remote) {
    console.log(remote.address + ':' + remote.port +' - ' + message);
    var nodeOne = new Buffer(message);
    console.log("Node Four After Buffer-->"+ nodeOne);
    clientAck.send(nodeOne, 0, nodeOne.length, PORTNODEONE, HOSTONE, function(err, bytes) {
        if (err) throw err;
        console.log('UDP message sent to ' + HOSTONE +':'+ PORTNODEONE);
    });
});

serverAck.bind(PORTFOUR, HOSTFOUR)
